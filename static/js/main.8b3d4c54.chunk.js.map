{"version":3,"sources":["components/not-found/earth.png","serviceWorker.js","components/dashboard/Dashboard.js","constants/Config.js","util/setAuthToken.js","actions/authentication.js","constants/ActionType.js","containers/dashboard/DashboardContainer.js","components/compose/Compose.js","actions/mailer.js","containers/compose/ComposeContainer.js","components/list/ListMail.js","components/list-item/MailItem.js","components/search/Search.js","components/sort/Sort.js","containers/inbox/InboxContainer.js","containers/drafts/DraftsContainer.js","containers/sent/SentContainer.js","containers/trash/TrashContainer.js","containers/spam/SpamContainer.js","components/mail-content/MailContent.js","containers/mail-content/MailContentContainer.js","routes.js","i18n/locales/translations.js","history.js","reducers/errorReducer.js","validation/is-empty.js","reducers/authReducer.js","reducers/mailReducer.js","reducers/index.js","store.js","components/login/Login.js","containers/login/LoginContainer.js","components/not-found/NotFound.js","components/sign-up/Signup.js","containers/sign-up/SignupContainer.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","messages","defineMessages","compose","id","defaultMessage","inbox","sent","drafts","trash","spam","Dashboard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDrawerOpen","setState","open","handleDrawerClose","handleClick","event","anchorEl","currentTarget","handleClose","onLogout","e","preventDefault","history","state","user","_this$props","classes","userInfo","formatMessage","intl","renderMenu","react_default","a","createElement","index_es","smDown","href","style","color","IconButton_default","onClick","ExitToApp_default","title","concat","firstname","lastname","placement","alt","src","avatar","className","renderMobileMenu","mdUp","aria-label","aria-owns","aria-haspopup","MoreVert_default","onClose","PaperProps","maxHeight","ITEM_HEIGHT","width","icon","Badge_default","badgeContent","Notifications_default","primary","inset","Fragment","CssBaseline_default","root","AppBar_default","position","classNames","appBar","appBarShift","Toolbar_default","disableGutters","toolbar","menuButton","menuButtonHidden","Menu_default","Typography_default","variant","noWrap","display","email","Drawer_default","paper","drawerPaper","drawerPaperClose","toolbarIcon","align","ChevronLeft_default","Divider_default","NavLink","to","activeClassName","Add_default","List_default","component","list","item","button","Inbox_default","Send_default","Delete_default","content","appBarSpacer","children","Component","withStyles","theme","paddingRight","objectSpread","alignItems","justifyContent","padding","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","marginRight","flexGrow","whiteSpace","defineProperty","overflowX","spacing","unit","breakpoints","up","height","overflow","chartContainer","tableContainer","marginTop","paddingLeft","paddingTop","paddingBottom","marginBottom","listStyle","textDecoration","&:hover,&:focus,&:visited,&","itemLink","margin","borderRadius","backgroundColor","itemIcon","fontSize","lineHeight","float","textAlign","verticalAlign","itemText","injectIntl","NODE_API","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decode","type","payload","logoutUser","dispatch","localStorage","removeItem","push","authenticate","getItem","get","then","res","data","catch","err","response","DashboardContainer","auth","isAuthenticated","components_dashboard_Dashboard","connect","send","Compose","handleChange","name","target","value","onSubmit","mail","receiver","errors","container","xs","sm","md","label","textField","onChange","required","gutterBottom","contentEditor","multiline","rows","formFooter","minWidth","deleteRestore","readMail","ComposeContainer","sendMail","nextProps","compose_Compose","post","ListMail","Grid_default","Paper_default","MailItem","deleteRestoreMail","routeChange","_id","_this2","userSend","userSender","userReceiver","read","unread","mdDown","dist_default","format","date","xsDown","RestoreFromTrash_default","search","Search","fullWidth","bydate","byname","Sort","handleSort","sortBy","sort","by","_this$state","KeyboardArrowDown_default","KeyboardArrowUp_default","active","messageContent","InboxContainer","setTimeout","path","url","listMail","filter","toLowerCase","indexOf","mB","mE","showMail","map","index","list_item_MailItem","key","list_ListMail","search_Search","sort_Sort","length","getAllMailInbox","DraftsContainer","SentContainer","getAllMailSent","TrashContainer","getAllMailTrash","SpamContainer","MailContent","mailContent","sender","AccountCircle_default","subheader","palette","text","secondary","MailContentContainer","goBack","mail_content_MailContent","getMailInfo","params","routes","exact","main","_ref","dashboard_DashboardContainer","inbox_InboxContainer","_ref2","compose_ComposeContainer","drafts_DraftsContainer","_ref3","sent_SentContainer","_ref4","trash_TrashContainer","spam_SpamContainer","_ref5","mail_content_MailContentContainer","_ref6","_ref7","translations","en","vi","createBrowserHistory","initialState","errorReducer","arguments","undefined","action","isEmpty","keys","trim","authReducer","userMore","findMailById","mails","i","mailReducer","splice","appReducers","combineReducers","middleware","thunk","store","createStore","appReducer","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","apply","signup","password","Login","react_material_ui_form_validator_lib","ref","onError","console","log","validators","errorMessages","LoginContainer","loginUser","components_login_Login","setItem","jwt_decode","NotFound","earth","Signup","birdthday","password_confirm","phone","address","direction","InputLabelProps","shrink","rowsMax","SignupContainer","signupUser","components_sign_up_Signup","registerUser","addLocaleData","viLocaleData","locale","replace","createMuiTheme","typography","useNextVariants","teal","jwtToken","split","decoded","currentTime","Date","now","exp","App","renderContent","result","route","Route","render","core_styles","lib_index_es","es","HashRouter","Switch","login_LoginContainer","sign_up_SignupContainer","components_not_found_NotFound","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8b3d4c54.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/earth.dd1024a7.png\";","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { ListItem, ListItemIcon, ListItemText, Avatar, Tooltip, Hidden, Menu, MenuItem, Button } from '@material-ui/core';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Dashboard.scss';\r\nimport { injectIntl, defineMessages } from \"react-intl\";\r\n\r\nconst drawerWidth = 240;\r\nconst ITEM_HEIGHT = 48;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24,\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginLeft: 12,\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing.unit * 7,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing.unit * 9,\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 3,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    chartContainer: {\r\n        marginLeft: -22,\r\n    },\r\n    tableContainer: {\r\n        height: 320,\r\n    },\r\n    list: {\r\n        marginTop: \"20px\",\r\n        paddingLeft: \"0\",\r\n        paddingTop: \"0\",\r\n        paddingBottom: \"0\",\r\n        marginBottom: \"0\",\r\n        listStyle: \"none\",\r\n        position: \"unset\"\r\n    },\r\n    item: {\r\n        position: \"relative\",\r\n        display: \"block\",\r\n        textDecoration: \"none\",\r\n        \"&:hover,&:focus,&:visited,&\": {\r\n            color: \"#FFFFFF\"\r\n        }\r\n    },\r\n    itemLink: {\r\n        width: \"auto\",\r\n        transition: \"all 300ms linear\",\r\n        margin: \"10px 15px 0\",\r\n        borderRadius: \"3px\",\r\n        position: \"relative\",\r\n        display: \"block\",\r\n        padding: \"10px 15px\",\r\n        backgroundColor: \"transparent\",\r\n    },\r\n    itemIcon: {\r\n        width: \"24px\",\r\n        height: \"30px\",\r\n        fontSize: \"24px\",\r\n        lineHeight: \"30px\",\r\n        float: \"left\",\r\n        marginRight: \"15px\",\r\n        textAlign: \"center\",\r\n        verticalAlign: \"middle\",\r\n    },\r\n    itemText: {\r\n        margin: \"0\",\r\n        lineHeight: \"30px\",\r\n        fontSize: \"14px\",\r\n        color: \"#FFFFFF\"\r\n    },\r\n});\r\n\r\nconst messages = defineMessages({\r\n    compose: {\r\n        id: 'compose',\r\n        defaultMessage: 'Compose'\r\n    },\r\n    inbox: {\r\n        id: 'inbox',\r\n        defaultMessage: 'Inbox'\r\n    },\r\n    sent: {\r\n        id: 'sent',\r\n        defaultMessage: 'Sent'\r\n    },\r\n    drafts: {\r\n        id: 'drafts',\r\n        defaultMessage: 'Drafts'\r\n    },\r\n    trash: {\r\n        id: 'trash',\r\n        defaultMessage: 'Trash'\r\n    },\r\n    spam: {\r\n        id: 'Spam',\r\n        defaultMessage: 'Spam'\r\n    }\r\n})\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: true,\r\n            anchorEl: null,\r\n            user: {}\r\n        };\r\n    }\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleDrawerClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleClick = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    onLogout = (e) => {\r\n        e.preventDefault();\r\n        this.props.onLogout(this.props.history);\r\n    }\r\n\r\n    render() {\r\n        const { classes, userInfo } = this.props;\r\n        const open = Boolean(this.state.anchorEl);\r\n        const { intl: { formatMessage } } = this.props;\r\n        const renderMenu = (\r\n            <Hidden smDown>\r\n                <Button href=\"/?locale=en\" style={{ \"color\": \"#fff\" }}>\r\n                    English\r\n                </Button>\r\n                <Button href=\"/?locale=vi\" style={{ \"color\": \"#fff\" }}>\r\n                    Tiếng Việt\r\n                </Button>\r\n                <IconButton color=\"inherit\" onClick={this.onLogout}>\r\n                    <ExitToAppIcon />\r\n                </IconButton>\r\n                <Tooltip title={ userInfo ? `${userInfo.firstname} ${userInfo.lastname}` : 'Name'} placement=\"bottom\">\r\n                    <Avatar alt={ userInfo ? `${userInfo.firstname} ${userInfo.lastname}` : 'Name'} src={userInfo ? userInfo.avatar :\"https://material-ui.com/static/images/remy.jpg\"} className={classes.avatar} />\r\n                </Tooltip>\r\n            </Hidden>\r\n        )\r\n\r\n        const renderMobileMenu = (\r\n            <Hidden mdUp>\r\n                <IconButton\r\n                    aria-label=\"More\"\r\n                    aria-owns={open ? 'long-menu' : null}\r\n                    aria-haspopup=\"true\"\r\n                    onClick={this.handleClick}\r\n                >\r\n                    <MoreVertIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id=\"long-menu\"\r\n                    anchorEl={this.state.anchorEl}\r\n                    open={open}\r\n                    onClose={this.handleClose}\r\n                    PaperProps={{\r\n                        style: {\r\n                            maxHeight: ITEM_HEIGHT * 4.5,\r\n                            width: 200,\r\n                        },\r\n                    }}\r\n                >\r\n                    <MenuItem onClick={this.handleClose}>\r\n                        <ListItemIcon className={classes.icon}>\r\n                            <Badge badgeContent={4} color=\"secondary\">\r\n                                <NotificationsIcon />\r\n                            </Badge>\r\n                        </ListItemIcon>\r\n                        <ListItemText classes={{ primary: classes.primary }} inset primary=\"Notifications\" />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleClose}>\r\n                        <Tooltip title={ userInfo ? `${userInfo.firstname} ${userInfo.lastname}` : 'Name'} placement=\"bottom\">\r\n                            <Avatar alt={ userInfo ? `${userInfo.firstname} ${userInfo.lastname}` : 'Name'} src={userInfo ? userInfo.avatar :\"https://material-ui.com/static/images/remy.jpg\"} className={classes.avatar} />\r\n                        </Tooltip>\r\n                        <ListItemText classes={{ primary: classes.primary }} inset primary={ userInfo ? userInfo.firstname : 'Name'} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.onLogout}>\r\n                        <ListItemIcon className={classes.icon}>\r\n                            <ExitToAppIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText classes={{ primary: classes.primary }} inset primary=\"Sign Out\" />\r\n                    </MenuItem>\r\n                    ))}\r\n                </Menu>\r\n            </Hidden>\r\n        )\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <CssBaseline />\r\n                <div className={classes.root}>\r\n                    <AppBar\r\n                        position=\"absolute\"\r\n                        className={classNames(classes.appBar, this.state.open && classes.appBarShift)}\r\n                    >\r\n                        <Toolbar disableGutters={!this.state.open} className={classes.toolbar}>\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"Open drawer\"\r\n                                onClick={this.handleDrawerOpen}\r\n                                className={classNames(\r\n                                    classes.menuButton,\r\n                                    this.state.open && classes.menuButtonHidden,\r\n                                )}\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                            <Typography\r\n                                variant=\"h6\"\r\n                                color=\"inherit\"\r\n                                noWrap\r\n                                className={classes.title}\r\n                                style={!this.state.open ? { \"display\": \"block\" } : { \"display\": \"none\" }\r\n                                }>\r\n                                React Mail\r\n                            </Typography>\r\n                            <Typography\r\n                                variant=\"h6\"\r\n                                color=\"inherit\"\r\n                                noWrap\r\n                                className={classes.title}\r\n                                style={this.state.open ? { \"display\": \"block\" } : { \"display\": \"none\" }}\r\n                            >\r\n                                { userInfo ? userInfo.email : 'Dashboard'}\r\n                            </Typography>\r\n                            {renderMenu}\r\n                            {renderMobileMenu}\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Drawer\r\n                        variant=\"permanent\"\r\n                        classes={{\r\n                            paper: classNames(classes.drawerPaper, !this.state.open && classes.drawerPaperClose),\r\n                        }}\r\n                        open={this.state.open}\r\n                    >\r\n                        <div className={classes.toolbarIcon}>\r\n                            <Typography variant=\"h6\" color=\"inherit\" align=\"center\" noWrap className={classes.title}>\r\n                                React Mail\r\n                            </Typography>\r\n                            <IconButton onClick={this.handleDrawerClose}>\r\n                                <ChevronLeftIcon />\r\n                            </IconButton>\r\n                        </div>\r\n                        <Divider />\r\n                        <div align=\"center\" style={this.state.open ? { \"display\": \"block\" } : { \"display\": \"none\" }}>\r\n                            <NavLink\r\n                                to='/compose'\r\n                                activeClassName=\"active\"\r\n                            >\r\n                                <button className=\"btnCompose\">\r\n                                    <AddIcon className=\"iconCompose\" />\r\n                                    <span className=\"textCompose\">{formatMessage(messages.compose)}</span>\r\n                                </button>\r\n                            </NavLink>\r\n                        </div>\r\n                        <List component=\"nav\" className={classes.list}>\r\n                            <NavLink\r\n                                to='/compose'\r\n                                className={classes.item}\r\n                                style={!this.state.open ? { \"display\": \"block\" } : { \"display\": \"none\" }}>\r\n                                <ListItem button >\r\n                                    <ListItemIcon>\r\n                                        <AddIcon />\r\n                                    </ListItemIcon>\r\n                                </ListItem>\r\n                            </NavLink>\r\n                            <NavLink to='/' className={classes.item}>\r\n                                <ListItem button >\r\n                                    <ListItemIcon>\r\n                                        <InboxIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={formatMessage(messages.inbox)} />\r\n                                </ListItem>\r\n                            </NavLink>\r\n                            <NavLink to='/sent' className={classes.item}>\r\n                                <ListItem button >\r\n                                    <ListItemIcon>\r\n                                        <SendIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={formatMessage(messages.sent)} />\r\n                                </ListItem>\r\n                            </NavLink>\r\n                            <NavLink to='/trash' className={classes.item}>\r\n                                <ListItem button >\r\n                                    <ListItemIcon>\r\n                                        <DeleteIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={formatMessage(messages.trash)} />\r\n                                </ListItem>\r\n                            </NavLink>\r\n                        </List>\r\n                    </Drawer>\r\n                    <main className={classes.content + ` mainContent`}>\r\n                        <div className={classes.appBarSpacer} />\r\n                        {this.props.children}\r\n                    </main>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nDashboard = withStyles(styles)(Dashboard);\r\n\r\nexport default injectIntl(Dashboard);","// export const NODE_API = 'http://localhost:3001';\r\nexport const NODE_API = 'https://pal-servermail.herokuapp.com';","import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n    if(token) {\r\n        axios.defaults.headers.common['Authorization'] = token;\r\n    }\r\n    else {\r\n        delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n}\r\n\r\nexport default setAuthToken;","import { GET_ERRORS, SET_CURRENT_USER, AUTHENTICATE } from './../constants/ActionType';\r\nimport axios from 'axios';\r\nimport { NODE_API } from './../constants/Config';\r\nimport setAuthToken from '../util/setAuthToken';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nexport const registerUser = (user, history) => dispatch => {\r\n    axios.post(`${NODE_API}/api/users/register`, user)\r\n        // .then(res => window.location.href = '/login')\r\n        .then(res => history.push('/login'))\r\n        .catch(err => {\r\n            if (err.data) {\r\n                dispatch({\r\n                    type: GET_ERRORS,\r\n                    payload: err.response.data\r\n                })\r\n            } else {\r\n                history.push('')\r\n            }\r\n        })\r\n}\r\n\r\nexport const loginUser = (user, history) => dispatch => {\r\n    axios.post(`${NODE_API}/api/users/login`, user)\r\n        .then(res => {\r\n            const { token } = res.data;\r\n            localStorage.setItem('jwtToken', token);\r\n            setAuthToken(token);\r\n            const decode = jwt_decode(token);\r\n            dispatch(setCurrentUser(decode));\r\n            authenticate();\r\n        })\r\n        .catch(err => {\r\n            if (err.data) {\r\n                dispatch({\r\n                    type: GET_ERRORS,\r\n                    payload: err.response.data\r\n                })\r\n            } else {\r\n                history.push('')\r\n                // window.location.href = ''\r\n            }\r\n        })\r\n}\r\n\r\nexport const setCurrentUser = decode => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: decode\r\n    }\r\n}\r\n\r\nexport const logoutUser = history => dispatch => {\r\n    localStorage.removeItem('jwtToken');\r\n    setAuthToken(false);\r\n    dispatch(setCurrentUser({}));\r\n    history.push('/login')\r\n}\r\n\r\nexport const authenticate = history => dispatch => {\r\n    setAuthToken(localStorage.getItem('jwtToken'))\r\n    axios.get(`${NODE_API}/api/users/me`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: AUTHENTICATE,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            if (err.data) {\r\n                dispatch({\r\n                    type: GET_ERRORS,\r\n                    payload: err.response.data\r\n                })\r\n            } else {\r\n                window.location.href = ''\r\n            }\r\n        })\r\n}","export const GET_ERRORS = 'GET_ERRORS';\r\nexport const AUTHENTICATE = 'AUTHENTICATE';\r\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\nexport const LOAD_ALL_MAIL_INBOX = 'LOAD_ALL_MAIL_INBOX';\r\nexport const LOAD_ALL_MAIL_SENT = 'LOAD_ALL_MAIL_SENT';\r\nexport const LOAD_ALL_MAIL_TRASH = 'LOAD_ALL_MAIL_TRASH';\r\nexport const LOAD_MAIL_INFO = 'LOAD_MAIL_INFO';\r\nexport const DELETE_RESTORE = 'DELETE_RESTORE';\r\nexport const SEND_MAIL = 'SEND_MAIL';\r\nexport const READ_MAIL = 'READ_MAIL';","import React, { Component } from 'react';\r\nimport Dashboard from '../../components/dashboard/Dashboard';\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser, authenticate } from './../../actions/authentication';\r\n\r\nclass DashboardContainer extends Component {\r\n\r\n    onLogout = history => {\r\n        this.props.onLogout(this.props.history);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.auth.isAuthenticated) {\r\n            // window.location.href = '/login';\r\n            this.props.history.push('/login')\r\n        }\r\n        this.props.authenticate();\r\n    }\r\n\r\n    render() {\r\n        const { userInfo } = this.props.auth;\r\n        return (\r\n            <Dashboard\r\n                onLogout={this.onLogout}\r\n                userInfo={userInfo}\r\n            >\r\n                {this.props.children}\r\n            </Dashboard>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth\r\n})\r\n\r\nconst mapDispatchToProp = (dispatch, props) => {\r\n    return {\r\n        onLogout: history => {\r\n            dispatch(logoutUser(history))\r\n        },\r\n        authenticate: () => {\r\n            dispatch(authenticate())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProp)(DashboardContainer);","import React, { Component } from 'react';\r\nimport { injectIntl, defineMessages } from \"react-intl\";\r\nimport { Grid, Paper, TextField, Button, Typography } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// import EditorDraft from '../editor/EditorDraft';\r\n\r\nconst messages = defineMessages({\r\n    title: {\r\n        id: 'compose.title',\r\n        defaultMessage: 'Title'\r\n    },\r\n    to: {\r\n        id: 'compose.to',\r\n        defaultMessage: 'To'\r\n    },\r\n    send: {\r\n        id: 'compose.send',\r\n        defaultMessage: 'Send'\r\n    },\r\n    content: {\r\n        id: 'compose.content',\r\n        defaultMessage: 'Content'\r\n    }\r\n})\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n        padding: 10,\r\n    },\r\n    textField: {\r\n        width: '100%',\r\n    },\r\n    formFooter: {\r\n        textAlign: 'right',\r\n    },\r\n    contentEditor: {\r\n        minWidth: 300,\r\n    }\r\n})\r\n\r\nclass Compose extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            receiver: '',\r\n            title: '',\r\n            content: ''\r\n        }\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        let mail = {\r\n            receiver: this.state.receiver,\r\n            title: this.state.title,\r\n            content: this.state.content\r\n        }\r\n        this.props.onSubmit(mail)\r\n    }\r\n\r\n    render() {\r\n        const { intl: { formatMessage }, classes, errors } = this.props;\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <Grid container spacing={24}>\r\n                        <Grid item xs={12} sm={12} md={6}>\r\n                            <TextField\r\n                                id=\"receiver\"\r\n                                label={formatMessage(messages.to)}\r\n                                className={classes.textField}\r\n                                value={this.state.receiver}\r\n                                onChange={this.handleChange('receiver')}\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                required={true}\r\n                            />\r\n                            <Typography variant=\"caption\" gutterBottom color=\"secondary\">\r\n                                {errors.messages ? errors.messages : ''}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6}>\r\n                            <TextField\r\n                                id=\"title\"\r\n                                label={formatMessage(messages.title)}\r\n                                className={classes.textField}\r\n                                value={this.state.title}\r\n                                onChange={this.handleChange('title')}\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} className={classes.contentEditor}>\r\n                            <Paper className={classes.paper}>\r\n                                <TextField\r\n                                    id=\"content\"\r\n                                    label={formatMessage(messages.content)}\r\n                                    multiline\r\n                                    rows=\"4\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.content}\r\n                                    onChange={this.handleChange('content')}\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    required={true}\r\n                                />\r\n                                <Typography variant=\"caption\" gutterBottom color=\"secondary\">\r\n                                    {errors.content ? errors.content : ''}\r\n                                </Typography>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={12} className={classes.formFooter}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                type=\"submit\"\r\n                            >\r\n                                {formatMessage(messages.send)}\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCompose = withStyles(styles)(Compose);\r\n\r\nexport default injectIntl(Compose);","import {\r\n    LOAD_ALL_MAIL_INBOX,\r\n    LOAD_ALL_MAIL_SENT,\r\n    LOAD_ALL_MAIL_TRASH,\r\n    LOAD_MAIL_INFO,\r\n    DELETE_RESTORE,\r\n    SEND_MAIL,\r\n    READ_MAIL,\r\n    GET_ERRORS\r\n} from './../constants/ActionType';\r\nimport axios from 'axios';\r\nimport { NODE_API } from './../constants/Config';\r\nimport setAuthToken from '../util/setAuthToken';\r\n\r\nexport const getAllMailInbox = () => dispatch => {\r\n    const token = localStorage.getItem('jwtToken');\r\n    setAuthToken(token)\r\n    axios.get(`${NODE_API}/api/mails/inbox`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: LOAD_ALL_MAIL_INBOX,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            if (err.data) {\r\n                dispatch({\r\n                    type: GET_ERRORS,\r\n                    payload: err.response.data\r\n                })\r\n            } else {\r\n                window.location.href = ''\r\n            }\r\n        })\r\n}\r\n\r\nexport const getAllMailSent = () => dispatch => {\r\n    const token = localStorage.getItem('jwtToken');\r\n    setAuthToken(token)\r\n    axios.get(`${NODE_API}/api/mails/sent`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: LOAD_ALL_MAIL_SENT,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            if (err.data) {\r\n                dispatch({\r\n                    type: GET_ERRORS,\r\n                    payload: err.response.data\r\n                })\r\n            } else {\r\n                window.location.href = ''\r\n            }\r\n        })\r\n}\r\n\r\nexport const getAllMailTrash = () => dispatch => {\r\n    const token = localStorage.getItem('jwtToken');\r\n    setAuthToken(token)\r\n    axios.get(`${NODE_API}/api/mails/trash`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: LOAD_ALL_MAIL_TRASH,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            if (err.data) {\r\n                dispatch({\r\n                    type: GET_ERRORS,\r\n                    payload: err.response.data\r\n                })\r\n            } else {\r\n                window.location.href = ''\r\n            }\r\n        })\r\n}\r\n\r\nexport const getMailInfo = id => dispatch => {\r\n    const token = localStorage.getItem('jwtToken');\r\n    setAuthToken(token)\r\n    axios.get(`${NODE_API}/api/mails/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: LOAD_MAIL_INFO,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            if (err.data) {\r\n                dispatch({\r\n                    type: GET_ERRORS,\r\n                    payload: err.response.data\r\n                })\r\n            } else {\r\n                window.location.href = ''\r\n            }\r\n        })\r\n}\r\n\r\nexport const deleteRestore = id => dispatch => {\r\n    const token = localStorage.getItem('jwtToken');\r\n    setAuthToken(token)\r\n    axios.get(`${NODE_API}/api/mails/delete-restore/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_RESTORE,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            if (err.data) {\r\n                dispatch({\r\n                    type: GET_ERRORS,\r\n                    payload: err.response.data\r\n                })\r\n            } else {\r\n                window.location.href = ''\r\n            }\r\n        })\r\n}\r\n\r\nexport const sendMail = data => dispatch => {\r\n    axios.post(`${NODE_API}/api/mails/sendmail`, data)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SEND_MAIL,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            if (err.data) {\r\n                dispatch({\r\n                    type: GET_ERRORS,\r\n                    payload: err.response.data\r\n                })\r\n            } else {\r\n                window.location.href = ''\r\n            }\r\n        })\r\n}\r\n\r\nexport const readMail = id => dispatch => {\r\n    const token = localStorage.getItem('jwtToken');\r\n    setAuthToken(token)\r\n    axios.get(`${NODE_API}/api/mails/read/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: READ_MAIL,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            if (err.data) {\r\n                dispatch({\r\n                    type: GET_ERRORS,\r\n                    payload: err.response.data\r\n                })\r\n            } else {\r\n                window.location.href = ''\r\n            }\r\n        })\r\n}","import React, { Component } from 'react';\r\nimport Compose from '../../components/compose/Compose';\r\nimport { sendMail } from './../../actions/mailer';\r\nimport { connect } from 'react-redux';\r\n\r\nclass ComposeContainer extends Component {\r\n\r\n    onSubmit = data => {\r\n        this.props.sendMail(data)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n        window.location.href = '/sent';\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.props.mail)\r\n        return (\r\n            <Compose onSubmit={this.onSubmit} errors={this.props.errors} />\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    mail: state.mail,\r\n    errors: state.errors\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        sendMail: data => {\r\n            dispatch(sendMail(data))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ComposeContainer);","import React, { Component } from 'react';\r\nimport { injectIntl } from \"react-intl\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { List } from '@material-ui/core';\r\nimport './List.scss';\r\n\r\nclass ListMail extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <Grid container spacing={16} className=\"ListMail\">\r\n                <Grid item xs={12}>\r\n                    <Paper className=\"ListMail-content\">\r\n                        <List>\r\n                            {this.props.children}\r\n                        </List>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default injectIntl(ListMail);","import React, { Component } from 'react';\r\nimport { ListItem, ListItemText, ListItemSecondaryAction, IconButton, Typography, Tooltip, Hidden } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport RestoreFromTrashIcon from '@material-ui/icons/RestoreFromTrash';\r\nimport Moment from 'react-moment';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    unread: {\r\n        backgroundColor: '#f2f2f2',\r\n    }\r\n})\r\n\r\nclass MailItem extends Component {\r\n\r\n    deleteRestoreMail = id => {\r\n        this.props.deleteRestoreMail(id)\r\n    }\r\n\r\n    routeChange = () => {\r\n        const { item } = this.props;\r\n        this.props.routeChange(item._id);\r\n    }\r\n\r\n    render() {\r\n        const { item, classes } = this.props;\r\n        const userSend = (\r\n            <Typography variant=\"body1\" gutterBottom>\r\n                <b>{item.userSender.firstname} {item.userSender.lastname}</b>\r\n                &nbsp;to&nbsp;\r\n                <b>{item.userReceiver.firstname} {item.userReceiver.lastname}</b>\r\n            </Typography>\r\n        )\r\n        return (\r\n            <React.Fragment>\r\n                <ListItem button component=\"nav\" className={item.read ? '' : classes.unread}>\r\n                    <ListItemText\r\n                        primary={userSend}\r\n                        onClick={this.routeChange} />\r\n                    <Hidden mdDown>\r\n                        <ListItemText onClick={this.routeChange}>\r\n                            <Typography variant=\"body2\" gutterBottom noWrap className=\"content-message\">\r\n                                {`${item.title} - ${item.content}`}\r\n                            </Typography>\r\n                        </ListItemText>\r\n                    </Hidden>\r\n                    <ListItemText\r\n                        onClick={this.routeChange}\r\n                        primary={\r\n                            <Moment format=\"YYYY/MM/DD\">\r\n                                {item.date}\r\n                            </Moment>\r\n                        }\r\n                    />\r\n\r\n                    <Hidden xsDown>\r\n                        <ListItemSecondaryAction className={`listAction`}>\r\n                            <Tooltip title=\"Delete\" placement=\"bottom\" style={item.trash ? { display: 'none' } : { display: 'block' }}>\r\n                                <IconButton aria-label=\"Delete\" onClick={() => this.deleteRestoreMail(item._id)}>\r\n                                    <DeleteIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title=\"Restore\" placement=\"bottom\" style={item.trash ? { display: 'block' } : { display: 'none' }}>\r\n                                <IconButton aria-label=\"Restore\" onClick={() => this.deleteRestoreMail(item._id)}>\r\n                                    <RestoreFromTrashIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </ListItemSecondaryAction>\r\n                    </Hidden>\r\n                </ListItem>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(MailItem);","import React, { Component } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { injectIntl, defineMessages } from \"react-intl\";\r\n\r\nconst messages = defineMessages({\r\n    search: {\r\n        id: 'search.search',\r\n        defaultMessage: 'Search'\r\n    }\r\n})\r\n\r\nconst styles = {\r\n    root: {\r\n        width: '100%',\r\n        padding: 10,\r\n    },\r\n};\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: ''\r\n        }\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    }\r\n\r\n    onClick = event => {\r\n        event.preventDefault();\r\n        this.props.onClick(this.state.search);\r\n    }\r\n\r\n    render() {\r\n        const { intl: { formatMessage }, classes } = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                <TextField\r\n                    id=\"search\"\r\n                    label={formatMessage(messages.search)}\r\n                    fullWidth\r\n                    value={this.state.search}\r\n                    onChange={this.handleChange('search')}\r\n                    margin=\"normal\"\r\n                />\r\n                <div align=\"right\">\r\n                    <Button type=\"button\" onClick={this.onClick} variant=\"contained\" color=\"primary\">\r\n                        {formatMessage(messages.search)}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSearch = withStyles(styles)(Search)\r\n\r\nexport default injectIntl(Search);","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Button, Menu, MenuItem } from '@material-ui/core';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport { injectIntl, defineMessages } from \"react-intl\";\r\n\r\nconst messages = defineMessages({\r\n    bydate: {\r\n        id: 'sort.bydate',\r\n        defaultMessage: 'Sort by date'\r\n    },\r\n    byname: {\r\n        id: 'sort.byname',\r\n        defaultMessage: 'Sort by name'\r\n    }\r\n})\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        padding: 10,\r\n    },\r\n    active: {\r\n        backgroundColor: '#f2f2f2',\r\n    }\r\n})\r\n\r\nclass Sort extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            anchorEl: null,\r\n            sort: {\r\n                by: 'by Date',\r\n                value: -1\r\n            }\r\n        }\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleSort = (sortBy, value) => {\r\n        this.setState({\r\n            sort: {\r\n                by: sortBy,\r\n                value: value\r\n            }\r\n        })\r\n        this.props.handleSort(sortBy, value);\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    }\r\n\r\n    render() {\r\n        const { intl: { formatMessage }, classes } = this.props;\r\n        const { anchorEl, sort } = this.state;\r\n        return (\r\n            <div className={classes.root}>\r\n                <Button\r\n                    aria-owns={anchorEl ? 'sort' : null}\r\n                    aria-haspopup=\"true\"\r\n                    onClick={this.handleClick}\r\n                    variant=\"outlined\"\r\n                >\r\n                    Sort {sort.by}\r\n                    {sort.value === 1 ? <KeyboardArrowDownIcon /> : <KeyboardArrowUpIcon />}\r\n                </Button>\r\n                <Menu\r\n                    id=\"sort\"\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <MenuItem\r\n                        onClick={() => this.handleSort('by Date', 1)}\r\n                        className={(sort.by === 'by Date' && sort.value === 1) ? classes.active : ''}\r\n                    >\r\n                        {formatMessage(messages.bydate)} <KeyboardArrowDownIcon />\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                        onClick={() => this.handleSort('by Date', -1)}\r\n                        className={(sort.by === 'by Date' && sort.value === -1) ? classes.active : ''}\r\n                    >\r\n                        {formatMessage(messages.bydate)} <KeyboardArrowUpIcon />\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                        onClick={() => this.handleSort('by Name', 1)}\r\n                        className={(sort.by === 'by Name' && sort.value === 1) ? classes.active : ''}\r\n                    >\r\n                        {formatMessage(messages.byname)} <KeyboardArrowDownIcon />\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                        onClick={() => this.handleSort('by Name', -1)}\r\n                        className={(sort.by === 'by Name' && sort.value === -1) ? classes.active : ''}\r\n                    >\r\n                        {formatMessage(messages.byname)} <KeyboardArrowUpIcon />\r\n                    </MenuItem>\r\n                </Menu>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSort = withStyles(styles)(Sort);\r\n\r\nexport default injectIntl(Sort);","import React, { Component } from 'react';\r\nimport { injectIntl, defineMessages } from \"react-intl\";\r\nimport { connect } from 'react-redux';\r\nimport { getAllMailInbox, deleteRestore, readMail } from './../../actions/mailer';\r\nimport ListMail from '../../components/list/ListMail';\r\nimport MailItem from '../../components/list-item/MailItem';\r\nimport Search from './../../components/search/Search';\r\nimport Sort from './../../components/sort/Sort';\r\nimport { Typography, Divider } from '@material-ui/core';\r\n\r\nconst messages = defineMessages({\r\n    messageContent: {\r\n        id: 'inboxcontainer.messageContent',\r\n        defaultMessage: 'No content'\r\n    }\r\n})\r\n\r\nclass InboxContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            sort: {\r\n                by: '',\r\n                value: 1\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { listMail } = this.props.mail;\r\n        let { search, sort } = this.state;\r\n        const { intl: { formatMessage } } = this.props;\r\n        if (search) {\r\n            listMail = listMail.filter(item => {\r\n                return (\r\n                    item.title.toLowerCase().indexOf(search.toLowerCase()) !== -1\r\n                    || item.userSender.email.toLowerCase().indexOf(search.toLowerCase()) !== -1\r\n                    || item.userReceiver.email.toLowerCase().indexOf(search.toLowerCase()) !== -1\r\n                    || item.userSender.firstname.toLowerCase().indexOf(search.toLowerCase()) !== -1\r\n                    || item.userSender.lastname.toLowerCase().indexOf(search.toLowerCase()) !== -1\r\n                    || item.userReceiver.firstname.toLowerCase().indexOf(search.toLowerCase()) !== -1\r\n                    || item.userReceiver.lastname.toLowerCase().indexOf(search.toLowerCase()) !== -1\r\n                );\r\n            })\r\n        }\r\n        if (sort.by === 'by Date') {\r\n            listMail = listMail.sort((mB, mE) => {\r\n                if (mB.date > mE.date) return sort.value\r\n                else if (mB.date < mE.date) return -sort.value\r\n                return 0\r\n            })\r\n        }\r\n        if (sort.by === 'by Name') {\r\n            listMail = listMail.sort((mB, mE) => {\r\n                if (mB.date > mE.date) return sort.value\r\n                else if (mB.date < mE.date) return -sort.value\r\n                return 0\r\n            })\r\n        }\r\n        let showMail = listMail.map((item, index) => {\r\n            return <MailItem\r\n                item={item}\r\n                key={index}\r\n                match={this.props.match}\r\n                history={this.props.history}\r\n                deleteRestoreMail={this.deleteRestoreMail}\r\n                routeChange={this.routeChange}\r\n            />\r\n        })\r\n        return (\r\n            <ListMail listMail={listMail}>\r\n                <Search onClick={this.onClick} />\r\n                <Divider />\r\n                <Sort handleSort={this.handleSort} />\r\n                <Divider />\r\n                {showMail.length > 0 ? showMail : <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n                    {formatMessage(messages.messageContent)}\r\n                </Typography>}\r\n            </ListMail>\r\n        );\r\n    }\r\n\r\n    onClick = search => {\r\n        this.setState({\r\n            search: search\r\n        })\r\n    }\r\n\r\n    handleSort = (sortBy, value) => {\r\n        this.setState({\r\n            sort: {\r\n                by: sortBy,\r\n                value: value\r\n            }\r\n        })\r\n    }\r\n\r\n    routeChange = id => {\r\n        this.props.readMail(id);\r\n        setTimeout(() => {\r\n            const { match, history } = this.props;\r\n            let path = (match.url === '/') ? `/inbox/${id}` : `${match.url}/${id}`;\r\n            history.push(path);\r\n        }, 10);\r\n    }\r\n\r\n    deleteRestoreMail = id => {\r\n        this.props.deleteRestore(id)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getAllMailInbox()\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    mail: state.mail\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        getAllMailInbox: () => {\r\n            dispatch(getAllMailInbox())\r\n        },\r\n        deleteRestore: id => {\r\n            dispatch(deleteRestore(id))\r\n        },\r\n        readMail: id => {\r\n            dispatch(readMail(id))\r\n        }\r\n    }\r\n}\r\n\r\nInboxContainer = injectIntl(InboxContainer)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InboxContainer);","import React, { Component } from 'react';\r\n\r\nclass DraftsContainer extends Component {\r\n    render() {\r\n        return (\r\n            <div>Drafts</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DraftsContainer;","import React, { Component } from 'react';\r\nimport { injectIntl, defineMessages } from \"react-intl\";\r\nimport { connect } from 'react-redux';\r\nimport { getAllMailSent, deleteRestore, readMail } from './../../actions/mailer';\r\nimport ListMail from '../../components/list/ListMail';\r\nimport MailItem from '../../components/list-item/MailItem';\r\nimport Search from './../../components/search/Search';\r\nimport Sort from './../../components/sort/Sort';\r\nimport { Typography, Divider } from '@material-ui/core';\r\n\r\nconst messages = defineMessages({\r\n    messageContent: {\r\n        id: 'sentcontainer.messageContent',\r\n        defaultMessage: 'No content'\r\n    }\r\n})\r\n\r\nclass SentContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            sort: {\r\n                by: '',\r\n                value: 1\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { listMail } = this.props.mail;\r\n        let { search, sort } = this.state;\r\n        const { intl: { formatMessage } } = this.props;\r\n        if (search) {\r\n            listMail = listMail.filter(item => {\r\n                return (\r\n                    item.title.toLowerCase().indexOf(search.toLowerCase()) !== -1\r\n                    || item.userSender.email.toLowerCase().indexOf(search.toLowerCase()) !== -1\r\n                    || item.userReceiver.email.toLowerCase().indexOf(search.toLowerCase()) !== -1\r\n                    || item.userSender.firstname.toLowerCase().indexOf(search.toLowerCase()) !== -1\r\n                    || item.userSender.lastname.toLowerCase().indexOf(search.toLowerCase()) !== -1\r\n                    || item.userReceiver.firstname.toLowerCase().indexOf(search.toLowerCase()) !== -1\r\n                    || item.userReceiver.lastname.toLowerCase().indexOf(search.toLowerCase()) !== -1\r\n                );\r\n            })\r\n        }\r\n        if (sort.by === 'by Date') {\r\n            listMail = listMail.sort((mB, mE) => {\r\n                if (mB.date > mE.date) return sort.value\r\n                else if (mB.date < mE.date) return -sort.value\r\n                return 0\r\n            })\r\n        }\r\n        if (sort.by === 'by Name') {\r\n            listMail = listMail.sort((mB, mE) => {\r\n                if (mB.date > mE.date) return sort.value\r\n                else if (mB.date < mE.date) return -sort.value\r\n                return 0\r\n            })\r\n        }\r\n        let showMail = listMail.map((item, index) => {\r\n            return <MailItem\r\n                item={item}\r\n                key={index}\r\n                match={this.props.match}\r\n                history={this.props.history}\r\n                deleteRestoreMail={this.deleteRestoreMail}\r\n                routeChange={this.routeChange}\r\n            />\r\n        })\r\n        return (\r\n            <ListMail listMail={listMail}>\r\n                <Search onClick={this.onClick} />\r\n                <Divider />\r\n                <Sort handleSort={this.handleSort} />\r\n                <Divider />\r\n                {showMail.length > 0 ? showMail : <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n                    {formatMessage(messages.messageContent)}\r\n                </Typography>}\r\n            </ListMail>\r\n        );\r\n    }\r\n\r\n    onClick = search => {\r\n        this.setState({\r\n            search: search\r\n        })\r\n    }\r\n\r\n    handleSort = (sortBy, value) => {\r\n        this.setState({\r\n            sort: {\r\n                by: sortBy,\r\n                value: value\r\n            }\r\n        })\r\n    }\r\n\r\n    routeChange = id => {\r\n        this.props.readMail(id);\r\n        setTimeout(() => {\r\n            const { match, history } = this.props;\r\n            let path = (match.url === '/') ? `/inbox/${id}` : `${match.url}/${id}`;\r\n            history.push(path);\r\n        }, 10);\r\n    }\r\n\r\n    showMail = (listMail) => {\r\n        let result = null;\r\n        if (listMail.length > 0) {\r\n            result = listMail.map((item, index) => {\r\n                return <MailItem item={item} key={index} match={this.props.match} history={this.props.history} deleteRestoreMail={this.deleteRestoreMail} />\r\n            })\r\n        } else {\r\n            result = (<Typography variant=\"h4\" gutterBottom align=\"center\">\r\n                No mail sent\r\n                    </Typography>)\r\n        }\r\n        return result;\r\n    }\r\n\r\n    deleteRestoreMail = id => {\r\n        this.props.deleteRestore(id)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getAllMailSent()\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    mail: state.mail\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        getAllMailSent: () => {\r\n            dispatch(getAllMailSent())\r\n        },\r\n        deleteRestore: id => {\r\n            dispatch(deleteRestore(id))\r\n        },\r\n        readMail: id => {\r\n            dispatch(readMail(id))\r\n        }\r\n    }\r\n}\r\n\r\nSentContainer = injectIntl(SentContainer)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SentContainer);","import React, { Component } from 'react';\r\nimport { injectIntl, defineMessages } from \"react-intl\";\r\nimport { connect } from 'react-redux';\r\nimport { getAllMailTrash, deleteRestore, readMail } from '../../actions/mailer';\r\nimport ListMail from '../../components/list/ListMail';\r\nimport MailItem from '../../components/list-item/MailItem';\r\nimport Search from './../../components/search/Search';\r\nimport Sort from './../../components/sort/Sort';\r\nimport { Typography, Divider } from '@material-ui/core';\r\n\r\nconst messages = defineMessages({\r\n    messageContent: {\r\n        id: 'trashcontainer.messageContent',\r\n        defaultMessage: 'No content'\r\n    }\r\n})\r\n\r\nclass TrashContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            sort: {\r\n                by: '',\r\n                value: 1\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { listMail } = this.props.mail;\r\n        let { search, sort } = this.state;\r\n        const { intl: { formatMessage } } = this.props;\r\n        if (search) {\r\n            listMail = listMail.filter(item => {\r\n                return (\r\n                    item.title.toLowerCase().indexOf(search.toLowerCase()) !== -1\r\n                    || item.userSender.email.toLowerCase().indexOf(search.toLowerCase()) !== -1\r\n                    || item.userReceiver.email.toLowerCase().indexOf(search.toLowerCase()) !== -1\r\n                    || item.userSender.firstname.toLowerCase().indexOf(search.toLowerCase()) !== -1\r\n                    || item.userSender.lastname.toLowerCase().indexOf(search.toLowerCase()) !== -1\r\n                    || item.userReceiver.firstname.toLowerCase().indexOf(search.toLowerCase()) !== -1\r\n                    || item.userReceiver.lastname.toLowerCase().indexOf(search.toLowerCase()) !== -1\r\n                );\r\n            })\r\n        }\r\n        if (sort.by === 'by Date') {\r\n            listMail = listMail.sort((mB, mE) => {\r\n                if (mB.date > mE.date) return sort.value\r\n                else if (mB.date < mE.date) return -sort.value\r\n                return 0\r\n            })\r\n        }\r\n        if (sort.by === 'by Name') {\r\n            listMail = listMail.sort((mB, mE) => {\r\n                if (mB.date > mE.date) return sort.value\r\n                else if (mB.date < mE.date) return -sort.value\r\n                return 0\r\n            })\r\n        }\r\n        let showMail = listMail.map((item, index) => {\r\n            return <MailItem\r\n                item={item}\r\n                key={index}\r\n                match={this.props.match}\r\n                history={this.props.history}\r\n                deleteRestoreMail={this.deleteRestoreMail}\r\n                routeChange={this.routeChange}\r\n            />\r\n        })\r\n        return (\r\n            <ListMail listMail={listMail}>\r\n                <Search onClick={this.onClick} />\r\n                <Divider />\r\n                <Sort handleSort={this.handleSort} />\r\n                <Divider />\r\n                {showMail.length > 0 ? showMail : <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n                    {formatMessage(messages.messageContent)}\r\n                </Typography>}\r\n            </ListMail>\r\n        );\r\n    }\r\n\r\n    onClick = search => {\r\n        this.setState({\r\n            search: search\r\n        })\r\n    }\r\n\r\n    handleSort = (sortBy, value) => {\r\n        this.setState({\r\n            sort: {\r\n                by: sortBy,\r\n                value: value\r\n            }\r\n        })\r\n    }\r\n\r\n    routeChange = id => {\r\n        this.props.readMail(id);\r\n        setTimeout(() => {\r\n            const { match, history } = this.props;\r\n            let path = (match.url === '/') ? `/inbox/${id}` : `${match.url}/${id}`;\r\n            history.push(path);\r\n        }, 10);\r\n    }\r\n\r\n    deleteRestoreMail = id => {\r\n        this.props.deleteRestore(id)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getAllMailTrash()\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    mail: state.mail\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        getAllMailTrash: () => {\r\n            dispatch(getAllMailTrash())\r\n        },\r\n        deleteRestore: id => {\r\n            dispatch(deleteRestore(id))\r\n        },\r\n        readMail: id => {\r\n            dispatch(readMail(id))\r\n        }\r\n    }\r\n}\r\n\r\nTrashContainer = injectIntl(TrashContainer)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TrashContainer);","import React, { Component } from 'react';\r\n\r\nclass SpamContainer extends Component {\r\n    render() {\r\n        return (\r\n            <div>Spam</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SpamContainer;","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Paper,\r\n    Grid,\r\n    Typography,\r\n    CardHeader,\r\n    Avatar,\r\n    Card,\r\n    CardContent,\r\n    Divider,\r\n    Hidden,\r\n    Tooltip,\r\n    IconButton\r\n} from '@material-ui/core';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Moment from 'react-moment';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport RestoreFromTrashIcon from '@material-ui/icons/RestoreFromTrash';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing.unit * 2,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n});\r\n\r\nclass MailContent extends Component {\r\n\r\n    deleteRestoreMail = id => {\r\n        this.props.deleteRestoreMail(id)\r\n    }\r\n\r\n    render() {\r\n        const { classes, mailContent } = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                <Grid container spacing={24}>\r\n                    <Grid item xs={12}>\r\n                        <Tooltip title=\"Delete\" placement=\"bottom\" style={mailContent.trash ? { display: 'none' } : { display: 'block' }}>\r\n                            <IconButton aria-label=\"Delete\" onClick={() => this.deleteRestoreMail(mailContent._id)}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Restore\" placement=\"bottom\" style={mailContent.trash ? { display: 'block' } : { display: 'none' }}>\r\n                            <IconButton aria-label=\"Restore\" onClick={() => this.deleteRestoreMail(mailContent._id)}>\r\n                                <RestoreFromTrashIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Paper className={classes.paper}>\r\n                            <Typography variant=\"h5\" gutterBottom>\r\n                                {mailContent.title}\r\n                            </Typography>\r\n                            <Divider />\r\n                            <Typography variant=\"caption\" gutterBottom align=\"right\">\r\n                                <Moment format=\"YYYY/MM/DD\">\r\n                                    {mailContent.date}\r\n                                </Moment>\r\n                            </Typography>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    (mailContent.userSender) ?\r\n                                        <Hidden smDown>\r\n                                            <Avatar\r\n                                                alt={mailContent.sender}\r\n                                                src={mailContent.userSender.avatar}\r\n                                                aria-label=\"Sender\"\r\n                                                className={classes.avatar}\r\n                                            /></Hidden> : <Hidden mdDown><Avatar className={classes.avatar}><AccountCircleIcon /></Avatar></Hidden>\r\n\r\n                                }\r\n                                title={(mailContent.userSender) ?\r\n                                    <Typography gutterBottom>\r\n                                        <b>{mailContent.userSender.firstname} {mailContent.userSender.lastname}</b>&nbsp;\r\n                                        <Hidden mdDown> &#60;{mailContent.userSender.email}&#62;</Hidden>\r\n                                    </Typography> : ''}\r\n                                subheader={(mailContent.userSender) ?\r\n                                    <div>\r\n                                        To: {mailContent.userReceiver.firstname} {mailContent.userReceiver.lastname}&nbsp;\r\n                                                <Hidden mdDown>{mailContent.userReceiver.email}</Hidden></div> : ''\r\n                                }\r\n                            />\r\n                            <Card>\r\n                                <CardContent>\r\n                                    <Typography gutterBottom variant=\"body1\">\r\n                                        {mailContent.content}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(MailContent);","import React, { Component } from 'react';\r\nimport MailContent from '../../components/mail-content/MailContent';\r\nimport { connect } from 'react-redux';\r\nimport { getMailInfo, deleteRestore } from './../../actions/mailer';\r\n\r\nclass MailContentContainer extends Component {\r\n\r\n    render() {\r\n        const { mailContent } = this.props.mail;\r\n        return (\r\n            <MailContent mailContent={mailContent} deleteRestoreMail={this.deleteRestoreMail} />\r\n        );\r\n    }\r\n    componentDidMount() {\r\n        const { match } = this.props;\r\n        this.props.getMailInfo(match.params.id);\r\n    }\r\n\r\n    deleteRestoreMail = id => {\r\n        this.props.deleteRestore(id)\r\n        // window.location.href = '/sent';\r\n        this.props.history.goBack();\r\n        // console.log(this.props.history);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    mail: state.mail\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        getMailInfo: id => {\r\n            dispatch(getMailInfo(id))\r\n        },\r\n        deleteRestore: id => {\r\n            dispatch(deleteRestore(id))\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MailContentContainer);","import React from 'react';\r\nimport DashboardContainer from './containers/dashboard/DashboardContainer';\r\nimport ComposeContainer from './containers/compose/ComposeContainer';\r\nimport InboxContainer from './containers/inbox/InboxContainer';\r\nimport DraftsContainer from './containers/drafts/DraftsContainer';\r\nimport SentContainer from './containers/sent/SentContainer';\r\nimport TrashContainer from './containers/trash/TrashContainer';\r\nimport SpamContainer from './containers/spam/SpamContainer';\r\nimport MailContentContainer from './containers/mail-content/MailContentContainer';\r\n\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        main: ({match, history}) => <DashboardContainer history={history}><InboxContainer match={match} history={history} /></DashboardContainer>\r\n    }, {\r\n        path: '/compose',\r\n        exact: true,\r\n        main: ({match, history}) => <DashboardContainer history={history}><ComposeContainer match={match} history={history} /></DashboardContainer>\r\n    }, {\r\n        path: '/drafts',\r\n        exact: true,\r\n        main: () => <DashboardContainer><DraftsContainer /></DashboardContainer>\r\n    }, {\r\n        path: '/sent',\r\n        exact: true,\r\n        main: ({match, history}) => <DashboardContainer history={history}><SentContainer match={match} history={history} /></DashboardContainer>\r\n    }, {\r\n        path: '/trash',\r\n        exact: true,\r\n        main: ({match, history}) => <DashboardContainer history={history}><TrashContainer match={match} history={history} /></DashboardContainer>\r\n    }, {\r\n        path: '/spam',\r\n        exact: true,\r\n        main: () => <DashboardContainer><SpamContainer /></DashboardContainer>\r\n    }, {\r\n        path: '/inbox/:id',\r\n        exact: false,\r\n        main: ({match, history}) => <DashboardContainer history={history}><MailContentContainer match={match} history={history} /></DashboardContainer>\r\n    }, {\r\n        path: '/sent/:id',\r\n        exact: false,\r\n        main: ({match, history}) => <DashboardContainer history={history}><MailContentContainer match={match} history={history} /></DashboardContainer>\r\n    }, {\r\n        path: '/trash/:id',\r\n        exact: false,\r\n        main: ({match, history}) => <DashboardContainer history={history}><MailContentContainer match={match} history={history} /></DashboardContainer>\r\n    }\r\n]\r\n\r\nexport default routes;","import en from './en.json';\r\nimport vi from './vi.json';\r\n\r\nexport default { en, vi };","import {createBrowserHistory} from 'history';\r\n\r\nexport default createBrowserHistory();","import { GET_ERRORS } from './../constants/ActionType';\r\n\r\nconst initialState = {};\r\n\r\nconst errorReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default errorReducer;","const isEmpty = (value) => {\r\n    return (\r\n        value === undefined ||\r\n        value === null ||\r\n        (typeof value === 'object' && Object.keys(value).length === 0) ||\r\n        (typeof value === 'string' && value.trim().length === 0)\r\n    );\r\n}\r\nexport default isEmpty;","import { SET_CURRENT_USER, AUTHENTICATE } from './../constants/ActionType';\r\nimport isEmpty from './../validation/is-empty';\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {}\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            }\r\n        \r\n        case AUTHENTICATE:\r\n            return {\r\n                ...state,\r\n                userInfo: action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","import {\r\n    LOAD_ALL_MAIL_INBOX,\r\n    LOAD_ALL_MAIL_SENT,\r\n    LOAD_ALL_MAIL_TRASH,\r\n    DELETE_RESTORE,\r\n    LOAD_MAIL_INFO,\r\n    SEND_MAIL,\r\n    READ_MAIL\r\n} from './../constants/ActionType';\r\n\r\nconst initialState = {\r\n    listMail: [],\r\n    mailContent: {},\r\n    userMore: {}\r\n}\r\n\r\nconst mailReducer = (state = initialState, action) => {\r\n    let index = -1;\r\n    switch (action.type) {\r\n        case LOAD_ALL_MAIL_INBOX:\r\n            return {\r\n                ...state,\r\n                listMail: action.payload\r\n            }\r\n\r\n        case LOAD_ALL_MAIL_SENT:\r\n            return {\r\n                ...state,\r\n                listMail: action.payload\r\n            }\r\n\r\n        case LOAD_ALL_MAIL_TRASH:\r\n            return {\r\n                ...state,\r\n                listMail: action.payload\r\n            }\r\n\r\n        case LOAD_MAIL_INFO:\r\n            return {\r\n                ...state,\r\n                mailContent: action.payload\r\n            }\r\n\r\n        case DELETE_RESTORE:\r\n            index = findMailById(state.listMail, action.payload)\r\n            if (index !== -1) {\r\n                state.listMail.splice(index, 1)\r\n            }\r\n            return {\r\n                ...state\r\n            }\r\n\r\n        case SEND_MAIL:\r\n            return {\r\n                ...state,\r\n                mailContent: action.payload\r\n            }\r\n\r\n        case READ_MAIL:\r\n            return {\r\n                ...state,\r\n                mailContent: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nlet findMailById = (mails, mail) => {\r\n    let index = -1;\r\n    if (mails.length > 0) {\r\n        for (let i = 0; i < mails.length; i++) {\r\n            if (mails[i]._id === mail._id) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return index;\r\n}\r\n\r\nexport default mailReducer;","import { combineReducers } from 'redux';\r\nimport errorReducer from './errorReducer';\r\nimport authReducer from './authReducer';\r\nimport mailReducer from './mailReducer';\r\n\r\nconst appReducers = combineReducers({\r\n    errors: errorReducer,\r\n    auth: authReducer,\r\n    mail: mailReducer\r\n\r\n});\r\n\r\nexport default appReducers;","import { createStore, applyMiddleware } from 'redux';\r\nimport appReducer from './reducers/index';\r\nimport thunk from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\n\r\nconst middleware = [thunk];\r\nif (process.env.NODE_ENV !== 'production') {\r\n    middleware.push(createLogger());\r\n}\r\n\r\nconst store = createStore(\r\n    appReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n    applyMiddleware(...middleware)\r\n);\r\n\r\nexport default store;","import React, { Component } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport { injectIntl, defineMessages } from \"react-intl\";\r\nimport './Login.scss';\r\n\r\nconst messages = defineMessages({\r\n    title: {\r\n        id: 'login.title',\r\n        defaultMessage: 'Log in'\r\n    },\r\n    signup: {\r\n        id: 'login.signup',\r\n        defaultMessage: 'Registry now!'\r\n    },\r\n    password: {\r\n        id: 'login.password',\r\n        defaultMessage: 'Password'\r\n    }\r\n})\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        let target = event.target;\r\n        let name = target.name;\r\n        let value = target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n    }\r\n\r\n    render() {\r\n        const { intl: { formatMessage }, errors } = this.props;\r\n        return (\r\n            <div className=\"Login\">\r\n                <span className=\"span-line\"></span>\r\n                <span className=\"span-line\"></span>\r\n                <span className=\"span-line\"></span>\r\n                <span className=\"span-line\"></span>\r\n                <div className=\"Login__content\">\r\n                    <ValidatorForm\r\n                        ref=\"form\"\r\n                        onSubmit={this.onSubmit}\r\n                        onError={errors => console.log(errors)}\r\n                    >\r\n                        <Typography variant=\"h3\" gutterBottom>\r\n                            {formatMessage(messages.title)}\r\n                        </Typography>\r\n                        <TextValidator\r\n                            id=\"email\"\r\n                            label=\"Email\"\r\n                            margin=\"normal\"\r\n                            className=\"form-control\"\r\n                            name=\"email\"\r\n                            value={this.state.email}\r\n                            onChange={this.handleChange}\r\n                            variant=\"outlined\"\r\n                            required={true}\r\n                            validators={['required', 'isEmail']}\r\n                            errorMessages={['This field is required', 'Email is not valid']}\r\n                        />\r\n                        <Typography variant=\"caption\" gutterBottom color=\"secondary\" align=\"left\">\r\n                            {errors.email ? errors.email : ''}\r\n                        </Typography>\r\n                        <TextValidator\r\n                            id=\"password\"\r\n                            label={formatMessage(messages.password)}\r\n                            margin=\"normal\"\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            name=\"password\"\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            variant=\"outlined\"\r\n                            required={true}\r\n                            validators={['required']}\r\n                            errorMessages={['This field is required']}\r\n                        />\r\n                        <Typography variant=\"caption\" gutterBottom color=\"secondary\" align=\"left\">\r\n                            {errors.password ? errors.password : ''}\r\n                        </Typography>\r\n                        <div>\r\n                            <button type=\"submit\" className=\"btn-login\">{formatMessage(messages.title)}</button>\r\n                        </div>\r\n                    </ValidatorForm>\r\n                    <div className=\"Login__footer\">\r\n                        <NavLink className=\"link\" to='/signup'>Registry now!</NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default injectIntl(Login);","import React, { Component } from 'react';\r\nimport Login from '../../components/login/Login';\r\nimport { connect } from 'react-redux';\r\nimport { loginUser } from './../../actions/authentication';\r\n\r\nclass LoginContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            errors: {}\r\n        }\r\n    }\r\n\r\n    onSubmit = (user) => {\r\n        this.props.loginUser(user, this.props.history);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.auth.isAuthenticated) {\r\n            // window.location.href = '/';\r\n            this.props.history.push('/')\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.auth.isAuthenticated) {\r\n            // window.location.href = '/';\r\n            this.props.history.push('/')\r\n        }\r\n        if(nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Login onSubmit={this.onSubmit} auth={this.props.auth} errors={this.props.errors} />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        loginUser: (user, history) => {\r\n            dispatch(loginUser(user, history))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer);","import React, { Component } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './NotFound.scss';\r\nimport earth from './earth.png';\r\n\r\nclass NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"NotFound\">\r\n                <div className=\"NotFound__content\">\r\n                    <Typography variant=\"h1\" gutterBottom className=\"txtheading\">\r\n                        404\r\n                    </Typography>\r\n                    <Typography variant=\"h3\" gutterBottom className=\"txtsubheading\">\r\n                        page not found\r\n                    </Typography>\r\n                    <hr />\r\n                    <NavLink className=\"link\" to='/'>Go Home</NavLink>\r\n                </div>\r\n                <div className=\"NotFound__image\">\r\n                    <div className=\"Earth\">\r\n                        <img src={earth} alt=\"Earth\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;","import React, { Component } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Grid, Paper, Button } from '@material-ui/core';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport './Signup.scss';\r\n\r\nclass Signup extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstname: '',\r\n            lastname: '',\r\n            birdthday: '',\r\n            email: '',\r\n            password: '',\r\n            password_confirm: '',\r\n            phone: '',\r\n            address: ''\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let target = event.target;\r\n        let name = target.name;\r\n        let value = target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        let user = {\r\n            firstname: this.state.firstname,\r\n            lastname: this.state.lastname,\r\n            birdthday: this.state.birdthday,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            password_confirm: this.state.password_confirm,\r\n            phone: this.state.phone,\r\n            address: this.state.address\r\n        }\r\n        this.props.onSubmit(user);\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.props;\r\n        return (\r\n            <Paper className=\"Signup\">\r\n                <Grid container spacing={16}>\r\n                    <Grid item xs={12} sm container>\r\n                        <ValidatorForm\r\n                            className=\"form\"\r\n                            ref=\"form\"\r\n                            onSubmit={this.onSubmit}\r\n                            onError={errors => console.log(errors)}\r\n                        >\r\n                            <Grid item xs container direction=\"column\" className=\"Signup__content\" spacing={16}>\r\n                                <Grid item xs>\r\n                                    <Typography variant=\"h3\" align=\"center\" gutterBottom>\r\n                                        Sign up\r\n                                    </Typography>\r\n                                    <TextValidator\r\n                                        id=\"firstname\"\r\n                                        label=\"Firstname\"\r\n                                        margin=\"normal\"\r\n                                        className=\"form-control\"\r\n                                        name=\"firstname\"\r\n                                        value={this.state.firstname}\r\n                                        onChange={this.handleChange}\r\n                                        variant=\"outlined\"\r\n                                        required={true}\r\n                                        validators={['required']}\r\n                                        errorMessages={['This field is required']}\r\n                                    />\r\n                                    <TextValidator\r\n                                        id=\"lastname\"\r\n                                        label=\"Lastname\"\r\n                                        margin=\"normal\"\r\n                                        className=\"form-control\"\r\n                                        name=\"lastname\"\r\n                                        value={this.state.lastname}\r\n                                        onChange={this.handleChange}\r\n                                        variant=\"outlined\"\r\n                                        required={true}\r\n                                        validators={['required']}\r\n                                        errorMessages={['This field is required']}\r\n                                    />\r\n                                    <TextValidator\r\n                                        id=\"email\"\r\n                                        label=\"Email\"\r\n                                        margin=\"normal\"\r\n                                        className=\"form-control\"\r\n                                        name=\"email\"\r\n                                        value={this.state.email}\r\n                                        onChange={this.handleChange}\r\n                                        variant=\"outlined\"\r\n                                        required={true}\r\n                                        validators={['required', 'isEmail']}\r\n                                        errorMessages={['This field is required', 'Email is not valid']}\r\n                                    />\r\n                                    <br/>\r\n                                    <Typography variant=\"body2\" gutterBottom color=\"secondary\">\r\n                                        {errors ? errors.email : ''}\r\n                                    </Typography>\r\n                                    <TextValidator\r\n                                        id=\"password\"\r\n                                        label=\"Password\"\r\n                                        margin=\"normal\"\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        name=\"password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.handleChange}\r\n                                        variant=\"outlined\"\r\n                                        required={true}\r\n                                        validators={['required']}\r\n                                        errorMessages={['This field is required']}\r\n                                    />\r\n                                    <br/>\r\n                                    <Typography variant=\"body2\" gutterBottom color=\"secondary\">\r\n                                        {errors ? errors.password : ''}\r\n                                    </Typography>\r\n                                    <TextValidator\r\n                                        id=\"password_confirm\"\r\n                                        label=\"Password Confirm\"\r\n                                        margin=\"normal\"\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        name=\"password_confirm\"\r\n                                        value={this.state.password_confirm}\r\n                                        onChange={this.handleChange}\r\n                                        variant=\"outlined\"\r\n                                        required={true}\r\n                                        validators={['required']}\r\n                                        errorMessages={['This field is required']}\r\n                                    />\r\n                                    <br/>\r\n                                    <Typography variant=\"body2\" gutterBottom color=\"secondary\">\r\n                                        {errors ? errors.password_confirm : ''}\r\n                                    </Typography>\r\n                                    <br />\r\n                                    <TextValidator\r\n                                        id=\"date\"\r\n                                        label=\"Birthday\"\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"birdthday\"\r\n                                        value={this.state.birdthday}\r\n                                        onChange={this.handleChange}\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                    <TextValidator\r\n                                        id=\"phone\"\r\n                                        label=\"Phone\"\r\n                                        margin=\"normal\"\r\n                                        className=\"form-control\"\r\n                                        name=\"phone\"\r\n                                        value={this.state.phone}\r\n                                        onChange={this.handleChange}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                    <TextValidator\r\n                                        id=\"address\"\r\n                                        label=\"Address\"\r\n                                        multiline\r\n                                        rowsMax=\"4\"\r\n                                        className=\"form-control\"\r\n                                        name=\"address\"\r\n                                        value={this.state.address}\r\n                                        onChange={this.handleChange}\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </Grid>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                >\r\n                                    Submit\r\n                                </Button>\r\n                            </Grid>\r\n                            <div align=\"right\" className=\"Signup__footer\">\r\n                                <NavLink className=\"link\" to='/login'>Login now!</NavLink>\r\n                            </div>\r\n                        </ValidatorForm>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Signup;","import React, { Component } from 'react';\r\nimport Signup from '../../components/sign-up/Signup';\r\nimport { connect } from 'react-redux';\r\nimport { registerUser } from './../../actions/index';\r\n\r\nclass SignupContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            errors: {}\r\n        }\r\n    }\r\n    \r\n    onSubmit = user => {\r\n        this.props.signupUser(user, this.props.history)\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.auth.isAuthenticated) {\r\n            // window.location.href = '/';\r\n            this.props.history.push('/')\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.auth.isAuthenticated) {\r\n            // window.location.href = '/';\r\n            this.props.history.push('/')\r\n        }\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Signup onSubmit={this.onSubmit} errors={this.props.errors} auth={this.props.auth} />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth,\r\n        errors: state.errors\r\n    }\r\n}\r\n\r\nconst mapDispatchToProp = (dispatch, props) => {\r\n    return {\r\n        signupUser: (user, history) => {\r\n            dispatch(registerUser(user, history))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProp)(SignupContainer);","import React, { Component } from 'react';\r\nimport routes from './routes';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { HashRouter } from 'react-router-dom'\r\n// theme\r\nimport 'typeface-roboto';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport teal from '@material-ui/core/colors/teal';\r\nimport { Provider } from 'react-redux';\r\n// i18n\r\nimport { IntlProvider, addLocaleData } from 'react-intl';\r\nimport viLocaleData from 'react-intl/locale-data/vi';\r\nimport translations from './i18n/locales/translations';\r\n// store & auth\r\nimport history from './history';\r\nimport store from './store';\r\nimport jwt_decode from 'jwt-decode';\r\nimport LoginContainer from './containers/login/LoginContainer';\r\nimport NotFound from './components/not-found/NotFound';\r\nimport SignupContainer from './containers/sign-up/SignupContainer';\r\nimport { setCurrentUser, logoutUser } from './actions';\r\n\r\naddLocaleData(viLocaleData);\r\n\r\nconst locale = window.location.search.replace('?locale=', '') || 'en'\r\n\r\nconst messages = translations[locale];\r\n\r\nconst theme = createMuiTheme({\r\n\ttypography: {\r\n\t\tuseNextVariants: true,\r\n\t},\r\n\tpalette: {\r\n\t\tprimary: teal,\r\n\t\tsecondary: {\r\n\t\t\tmain: '#ff5722',\r\n\t\t},\r\n\t},\r\n});\r\n\r\nif (localStorage.jwtToken) {\r\n\tconst auth = localStorage.jwtToken;\r\n\tconst token = auth.split(' ')[1];\r\n\tconst decoded = jwt_decode(token);\r\n\tstore.dispatch(setCurrentUser(decoded))\r\n\r\n\tconst currentTime = Date.now() / 1000;\r\n\tif (decoded.exp < currentTime) {\r\n\t\tstore.dispatch(logoutUser());\r\n\t\twindow.location.href = '/login'\r\n\t}\r\n}\r\n\r\nclass App extends Component {\r\n\r\n\trenderContent = (routes) => {\r\n\t\tlet result = null;\r\n\t\tif (routes.length > 0) {\r\n\t\t\tresult = routes.map((route, index) => {\r\n\t\t\t\treturn <Route\r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t\tpath={route.path}\r\n\t\t\t\t\texact={route.exact}\r\n\t\t\t\t\trender={route.main}\r\n\t\t\t\t/>\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<MuiThemeProvider theme={theme}>\r\n\t\t\t\t<IntlProvider locale={locale} key={locale} messages={messages}>\r\n\t\t\t\t\t<Provider store={store}>\r\n\t\t\t\t\t\t<HashRouter history={history}>\r\n\t\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t\t{this.renderContent(routes)}\r\n\t\t\t\t\t\t\t\t<Route path='/login' render={({history}) => <LoginContainer history={history} />} />\r\n\t\t\t\t\t\t\t\t<Route path='/signup' render={({history}) => <SignupContainer history={history} />} />\r\n\t\t\t\t\t\t\t\t<Route path='' render={() => <NotFound />} />\r\n\t\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t\t</HashRouter >\r\n\t\t\t\t\t</Provider>\r\n\t\t\t\t</IntlProvider>\r\n\t\t\t</MuiThemeProvider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}